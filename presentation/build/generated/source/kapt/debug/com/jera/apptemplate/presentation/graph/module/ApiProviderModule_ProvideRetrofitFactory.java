// Generated by Dagger (https://google.github.io/dagger).
package com.jera.apptemplate.presentation.graph.module;

import com.google.gson.Gson;
import com.jakewharton.retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

public final class ApiProviderModule_ProvideRetrofitFactory implements Factory<Retrofit> {
  private final ApiProviderModule module;

  private final Provider<OkHttpClient> okHttpClientProvider;

  private final Provider<RxJava2CallAdapterFactory> rxJavaCallAdapterFactoryProvider;

  private final Provider<Gson> gsonProvider;

  private final Provider<String> apiEndPointProvider;

  public ApiProviderModule_ProvideRetrofitFactory(
      ApiProviderModule module,
      Provider<OkHttpClient> okHttpClientProvider,
      Provider<RxJava2CallAdapterFactory> rxJavaCallAdapterFactoryProvider,
      Provider<Gson> gsonProvider,
      Provider<String> apiEndPointProvider) {
    this.module = module;
    this.okHttpClientProvider = okHttpClientProvider;
    this.rxJavaCallAdapterFactoryProvider = rxJavaCallAdapterFactoryProvider;
    this.gsonProvider = gsonProvider;
    this.apiEndPointProvider = apiEndPointProvider;
  }

  @Override
  public Retrofit get() {
    return Preconditions.checkNotNull(
        module.provideRetrofit(
            okHttpClientProvider.get(),
            rxJavaCallAdapterFactoryProvider.get(),
            gsonProvider.get(),
            apiEndPointProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ApiProviderModule_ProvideRetrofitFactory create(
      ApiProviderModule module,
      Provider<OkHttpClient> okHttpClientProvider,
      Provider<RxJava2CallAdapterFactory> rxJavaCallAdapterFactoryProvider,
      Provider<Gson> gsonProvider,
      Provider<String> apiEndPointProvider) {
    return new ApiProviderModule_ProvideRetrofitFactory(
        module,
        okHttpClientProvider,
        rxJavaCallAdapterFactoryProvider,
        gsonProvider,
        apiEndPointProvider);
  }

  public static Retrofit proxyProvideRetrofit(
      ApiProviderModule instance,
      OkHttpClient okHttpClient,
      RxJava2CallAdapterFactory rxJavaCallAdapterFactory,
      Gson gson,
      String apiEndPoint) {
    return Preconditions.checkNotNull(
        instance.provideRetrofit(okHttpClient, rxJavaCallAdapterFactory, gson, apiEndPoint),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
