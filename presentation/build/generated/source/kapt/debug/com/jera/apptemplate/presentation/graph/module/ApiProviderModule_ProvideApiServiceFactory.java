// Generated by Dagger (https://google.github.io/dagger).
package com.jera.apptemplate.presentation.graph.module;

import com.jera.apptemplate.data.client.ApiService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class ApiProviderModule_ProvideApiServiceFactory implements Factory<ApiService> {
  private final ApiProviderModule module;

  private final Provider<Retrofit> retrofitProvider;

  public ApiProviderModule_ProvideApiServiceFactory(
      ApiProviderModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public ApiService get() {
    return Preconditions.checkNotNull(
        module.provideApiService(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ApiProviderModule_ProvideApiServiceFactory create(
      ApiProviderModule module, Provider<Retrofit> retrofitProvider) {
    return new ApiProviderModule_ProvideApiServiceFactory(module, retrofitProvider);
  }

  public static ApiService proxyProvideApiService(ApiProviderModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.provideApiService(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
